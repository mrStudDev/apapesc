# Generated by Django 5.1.3 on 2024-12-15 23:59

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_associacao', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProfissoesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Profissão')),
            ],
        ),
        migrations.CreateModel(
            name='AssociadoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('senha_gov', models.CharField(blank=True, help_text='Senha criptografada para segurança.', max_length=128, null=True)),
                ('celular', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\d{5}-\\d{4}$', 'Número inválido. O telefone deve conter 10 ou 11 dígitos, ex: (48)99999-9999.')])),
                ('celular_correspondencia', models.CharField(default='', max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\d{5}-\\d{4}$', 'Número inválido. O telefone deve conter 10 ou 11 dígitos, ex: (48)99999-9999.')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('senha_google', models.CharField(blank=True, help_text='Senha criptografada para segurança.', max_length=128, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_associados/')),
                ('sexo_biologico', models.CharField(blank=True, choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=15, verbose_name='Sexo Biológico')),
                ('etnia', models.CharField(blank=True, choices=[('Branco', 'Branco'), ('Pardo', 'Pardo'), ('Preto', 'Preto'), ('Amarelo', 'Amarelo'), ('Indígena', 'Indígena'), ('Outro', 'Outro'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=15, verbose_name='Etnia')),
                ('escolaridade', models.CharField(blank=True, choices=[('Analfabeto', 'Analfabeto'), ('Primário 1/4 série', 'Primário 1/4 série'), ('Fundamental', 'Fundamental'), ('Ensino Médio', 'Ensino Médio'), ('Ensino Superior', 'Ensino Superior'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=20, verbose_name='Escolaridade')),
                ('nome_mae', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome da Mãe')),
                ('nome_pai', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Pai')),
                ('estado_civil', models.CharField(blank=True, choices=[('solteiro', 'solteiro'), ('solteira', 'solteira'), ('casado', 'casado'), ('casada', 'casada'), ('divorciado', 'divorciado'), ('divorciada', 'divorciada'), ('viúvo', 'viúvo'), ('viúva', 'viúva'), ('união estável', 'união estável'), ('separado judicialmente', 'separado judicialmente'), ('separada judicialmente', 'separada judicialmente'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Estado Civil')),
                ('recolhe_inss', models.CharField(blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True)),
                ('recebe_seguro', models.CharField(blank=True, choices=[('Não Recebe', 'Não Recebe'), ('A paetir de Dez', 'A paetir de Dez'), ('A paetir de Jan', 'A paetir de Jan'), ('A paetir de Fev', 'A paetir de Fev'), ('A paetir de Março', 'A paetir de Março'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True)),
                ('rg_numero', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Número do RG')),
                ('rg_orgao', models.CharField(blank=True, choices=[('SSP/AC', 'SSP/AC'), ('SSP/AL', 'SSP/AL'), ('SSP/AP', 'SSP/AP'), ('SSP/AM', 'SSP/AM'), ('SSP/BA', 'SSP/BA'), ('SSP/CE', 'SSP/CE'), ('SSP/DF', 'SSP/DF'), ('SSP/ES', 'SSP/ES'), ('SSP/GO', 'SSP/GO'), ('SSP/MA', 'SSP/MA'), ('SSP/MG', 'SSP/MG'), ('SSP/MS', 'SSP/MS'), ('SSP/MT', 'SSP/MT'), ('SSP/PA', 'SSP/PA'), ('SSP/PB', 'SSP/PB'), ('SSP/PE', 'SSP/PE'), ('SSP/PI', 'SSP/PI'), ('SSP/RJ', 'SSP/RJ'), ('SSP/RN', 'SSP/RN'), ('SSP/RS', 'SSP/RS'), ('SSP/RO', 'SSP/RO'), ('SSP/RR', 'SSP/RR'), ('SSP/SC', 'SSP/SC'), ('SSP/SP', 'SSP/SP'), ('SSP/SE', 'SSP/SE'), ('SSP/TO', 'SSP/TO'), ('UF', 'UF'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, verbose_name='RG-Orgão Emissor')),
                ('rg_data_emissao', models.DateField(blank=True, null=True, verbose_name='Data Emissão do RG')),
                ('naturalidade', models.CharField(blank=True, max_length=100, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('nit', models.CharField(blank=True, max_length=25, null=True, unique=True, verbose_name='Número do NIT')),
                ('pis', models.CharField(blank=True, max_length=25, null=True, verbose_name='Número do PIS')),
                ('titulo_eleitor', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número do Título de Eleitor')),
                ('caepef', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número do CAEPEF')),
                ('cei', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número do CEI')),
                ('rgp', models.CharField(blank=True, max_length=25, null=True, unique=True, verbose_name='Número do RGP')),
                ('rgp_data_emissao', models.DateField(blank=True, null=True, verbose_name='Data Emissão do RGP')),
                ('primeiro_registro', models.DateField(blank=True, null=True, verbose_name='Data Primeiro Registro (RGP)')),
                ('rgp_mpa', models.CharField(blank=True, max_length=12, null=True, verbose_name='Mapa do RGP')),
                ('ctps', models.CharField(blank=True, max_length=25, null=True, unique=True, verbose_name='Número Carteira Trabalho (CTPS)')),
                ('ctps_serie', models.CharField(blank=True, max_length=25, null=True, verbose_name='CTPS - Série')),
                ('ctps_data_emissao', models.DateField(blank=True, null=True, verbose_name='Data Emissão da CTPS')),
                ('ctps_uf', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='CTPS UF')),
                ('cnh', models.CharField(blank=True, max_length=25, null=True, unique=True, verbose_name='Núm. Registro da CNH')),
                ('cnh_data_emissao', models.DateField(blank=True, null=True, verbose_name='Data Emissão da CNH')),
                ('logradouro', models.CharField(blank=True, help_text='Ex: Rua, Servidão, Travessa', max_length=255, null=True, verbose_name='Logradouro')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('numero', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=255, null=True)),
                ('cep', models.CharField(blank=True, default='', max_length=9, null=True, validators=[django.core.validators.RegexValidator('^\\d{5}-\\d{3}$', 'CEP deve estar no formato 00000-000')], verbose_name='CEP')),
                ('municipio', models.CharField(blank=True, max_length=100, null=True)),
                ('uf', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Estado')),
                ('data_filiacao', models.DateField(null=True, verbose_name='Data da Filiação')),
                ('data_desfiliacao', models.DateField(blank=True, null=True, verbose_name='Data da Desfiliação')),
                ('status', models.CharField(blank=True, choices=[('Associado Lista Ativo(a)', 'Associado Lista Ativo(a)'), ('Associado Lista Aposentado(a)', 'Associado  Lista Aposentado(a)'), ('Desassociado(a)', 'Desassociado(a)'), ('Candidato(a)', 'Candidato(a)'), ('Cliente Especial', 'Cliente Especial')], default='Candidato(a)', max_length=40, null=True, verbose_name='Status')),
                ('especie1', models.CharField(blank=True, choices=[('Pampo', 'Pampo'), ('Abrótea', 'Abrótea'), ('Tainha', 'Tainha'), ('Anchova', 'Anchova'), ('Robalo', 'Robalo'), ('Sardinha', 'Sardinha'), ('Atum', 'Atum'), ('Corvina', 'Corvina'), ('Pescada-olhuda', 'Pescada-olhuda'), ('Linguado', 'Linguado'), ('Garoupa', 'Garoupa'), ('Bagre', 'Bagre'), ('Baiacu', 'Baiacu'), ('Cavala', 'Cavala'), ('Xerelete', 'Xerelete'), ('Cação', 'Cação'), ('Marisco', 'Marisco'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Espécie 1')),
                ('quantidade1', models.CharField(blank=True, max_length=12, null=True, verbose_name='Quantidade 1 (Kg)')),
                ('especie2', models.CharField(blank=True, choices=[('Pampo', 'Pampo'), ('Abrótea', 'Abrótea'), ('Tainha', 'Tainha'), ('Anchova', 'Anchova'), ('Robalo', 'Robalo'), ('Sardinha', 'Sardinha'), ('Atum', 'Atum'), ('Corvina', 'Corvina'), ('Pescada-olhuda', 'Pescada-olhuda'), ('Linguado', 'Linguado'), ('Garoupa', 'Garoupa'), ('Bagre', 'Bagre'), ('Baiacu', 'Baiacu'), ('Cavala', 'Cavala'), ('Xerelete', 'Xerelete'), ('Cação', 'Cação'), ('Marisco', 'Marisco'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Espécie 2')),
                ('quantidade2', models.CharField(blank=True, max_length=12, null=True, verbose_name='Quantidade 2 (Kg)')),
                ('especie3', models.CharField(blank=True, choices=[('Pampo', 'Pampo'), ('Abrótea', 'Abrótea'), ('Tainha', 'Tainha'), ('Anchova', 'Anchova'), ('Robalo', 'Robalo'), ('Sardinha', 'Sardinha'), ('Atum', 'Atum'), ('Corvina', 'Corvina'), ('Pescada-olhuda', 'Pescada-olhuda'), ('Linguado', 'Linguado'), ('Garoupa', 'Garoupa'), ('Bagre', 'Bagre'), ('Baiacu', 'Baiacu'), ('Cavala', 'Cavala'), ('Xerelete', 'Xerelete'), ('Cação', 'Cação'), ('Marisco', 'Marisco'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Espécie 3')),
                ('quantidade3', models.CharField(blank=True, max_length=12, null=True, verbose_name='Quantidade 3 (Kg)')),
                ('especie4', models.CharField(blank=True, choices=[('Pampo', 'Pampo'), ('Abrótea', 'Abrótea'), ('Tainha', 'Tainha'), ('Anchova', 'Anchova'), ('Robalo', 'Robalo'), ('Sardinha', 'Sardinha'), ('Atum', 'Atum'), ('Corvina', 'Corvina'), ('Pescada-olhuda', 'Pescada-olhuda'), ('Linguado', 'Linguado'), ('Garoupa', 'Garoupa'), ('Bagre', 'Bagre'), ('Baiacu', 'Baiacu'), ('Cavala', 'Cavala'), ('Xerelete', 'Xerelete'), ('Cação', 'Cação'), ('Marisco', 'Marisco'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Espécie 4')),
                ('quantidade4', models.CharField(blank=True, max_length=12, null=True, verbose_name='Quantidade 4 (Kg)')),
                ('especie5', models.CharField(blank=True, choices=[('Pampo', 'Pampo'), ('Abrótea', 'Abrótea'), ('Tainha', 'Tainha'), ('Anchova', 'Anchova'), ('Robalo', 'Robalo'), ('Sardinha', 'Sardinha'), ('Atum', 'Atum'), ('Corvina', 'Corvina'), ('Pescada-olhuda', 'Pescada-olhuda'), ('Linguado', 'Linguado'), ('Garoupa', 'Garoupa'), ('Bagre', 'Bagre'), ('Baiacu', 'Baiacu'), ('Cavala', 'Cavala'), ('Xerelete', 'Xerelete'), ('Cação', 'Cação'), ('Marisco', 'Marisco'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Espécie 5')),
                ('quantidade5', models.CharField(blank=True, max_length=12, null=True, verbose_name='Quantidade 5 (Kg)')),
                ('data_atualizacao', models.DateField(auto_now=True)),
                ('content', models.TextField(blank=True, null=True, verbose_name='Anotações')),
                ('associacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associados_associacao', to='app_associacao.associacaomodel', verbose_name='Associação')),
                ('municipio_circunscricao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='municipios_associados', to='app_associacao.municipiosmodel', verbose_name='Município de Circunscrição')),
                ('reparticao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reparticoes_associados', to='app_associacao.reparticoesmodel', verbose_name='Repartição')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='associado', to=settings.AUTH_USER_MODEL, verbose_name='Usuário Associado')),
                ('profissao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_associados.profissoesmodel', verbose_name='Profissão')),
            ],
        ),
    ]
