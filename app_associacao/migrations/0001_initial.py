# Generated by Django 5.1.3 on 2024-12-22 20:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssociacaoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_fantasia', models.CharField(max_length=255, verbose_name='Nome Fantasia')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('cnpj', models.CharField(max_length=18, unique=True, verbose_name='CNPJ')),
                ('celular', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\d{5}-\\d{4}$', 'Número inválido. O telefone deve conter 10 ou 11 dígitos, ex: (48)99999-9999.')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('fundadores', models.TextField(help_text='Lista de fundadores da associação', verbose_name='Fundadores')),
                ('logradouro', models.CharField(blank=True, default='', help_text='Ex: Rua, Servidão, Travessa', max_length=255, null=True, verbose_name='Logradouro')),
                ('bairro', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('numero', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=255, null=True)),
                ('cep', models.CharField(blank=True, default='', max_length=9, null=True, validators=[django.core.validators.RegexValidator('^\\d{5}-\\d{3}$', 'CEP deve estar no formato 00000-000.')], verbose_name='CEP')),
                ('municipio', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('uf', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Estado')),
                ('data_abertura', models.DateField(blank=True, null=True, verbose_name='Data de Abertura')),
                ('data_encerramento', models.DateField(blank=True, null=True, verbose_name='Data de Encerramento')),
            ],
            options={
                'verbose_name': 'Associacao',
                'ordering': ['nome_fantasia'],
            },
        ),
        migrations.CreateModel(
            name='CargosModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Nome do Cargo')),
            ],
        ),
        migrations.CreateModel(
            name='MunicipiosModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipio', models.CharField(max_length=120)),
                ('uf', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='IntegrantesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('celular', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\d{5}-\\d{4}$', 'Número inválido. O telefone deve conter 10 ou 11 dígitos, ex: (48)99999-9999.')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_associados/')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('naturalidade', models.CharField(blank=True, max_length=100, null=True)),
                ('rg_numero', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Número do RG')),
                ('rg_orgao', models.CharField(choices=[('SSP/AC', 'SSP/AC'), ('SSP/AL', 'SSP/AL'), ('SSP/AP', 'SSP/AP'), ('SSP/AM', 'SSP/AM'), ('SSP/BA', 'SSP/BA'), ('SSP/CE', 'SSP/CE'), ('SSP/DF', 'SSP/DF'), ('SSP/ES', 'SSP/ES'), ('SSP/GO', 'SSP/GO'), ('SSP/MA', 'SSP/MA'), ('SSP/MG', 'SSP/MG'), ('SSP/MS', 'SSP/MS'), ('SSP/MT', 'SSP/MT'), ('SSP/PA', 'SSP/PA'), ('SSP/PB', 'SSP/PB'), ('SSP/PE', 'SSP/PE'), ('SSP/PI', 'SSP/PI'), ('SSP/RJ', 'SSP/RJ'), ('SSP/RN', 'SSP/RN'), ('SSP/RS', 'SSP/RS'), ('SSP/RO', 'SSP/RO'), ('SSP/RR', 'SSP/RR'), ('SSP/SC', 'SSP/SC'), ('SSP/SP', 'SSP/SP'), ('SSP/SE', 'SSP/SE'), ('SSP/TO', 'SSP/TO'), ('UF', 'UF'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, verbose_name='RG-Orgão Emissor')),
                ('rg_data_emissao', models.DateField(blank=True, null=True, verbose_name='Data de Emissão do RG')),
                ('logradouro', models.CharField(blank=True, default='', help_text='Ex: Rua, Servidão, Travessa', max_length=255, null=True, verbose_name='Logradouro')),
                ('bairro', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('numero', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=255, null=True)),
                ('cep', models.CharField(blank=True, default='', max_length=9, null=True, validators=[django.core.validators.RegexValidator('^\\d{5}-\\d{3}$', 'CEP deve estar no formato 00000-000.')], verbose_name='CEP')),
                ('municipio', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('uf', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Estado')),
                ('data_entrada', models.DateField(blank=True, null=True, verbose_name='Data de Entrada')),
                ('data_saida', models.DateField(blank=True, null=True, verbose_name='Data de Saida')),
                ('associacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='integrantes', to='app_associacao.associacaomodel', verbose_name='Associação')),
                ('cargo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_associacao.cargosmodel', verbose_name='Cargo')),
                ('user', models.OneToOneField(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='integrante', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='associacaomodel',
            name='administrador',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administrador_associacao', to='app_associacao.integrantesmodel', verbose_name='Administrador'),
        ),
        migrations.AddField(
            model_name='associacaomodel',
            name='diretores',
            field=models.ManyToManyField(blank=True, related_name='diretores_associacao', to='app_associacao.integrantesmodel', verbose_name='Diretores'),
        ),
        migrations.AddField(
            model_name='associacaomodel',
            name='presidente',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='presidente_associacao', to='app_associacao.integrantesmodel', verbose_name='Presidente'),
        ),
        migrations.CreateModel(
            name='ReparticoesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_reparticao', models.CharField(max_length=120)),
                ('celular', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\d{5}-\\d{4}$', 'Número inválido. O telefone deve conter 10 ou 11 dígitos, ex: (48)99999-9999.')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('logradouro', models.CharField(blank=True, default='', help_text='Ex: Rua, Servidão, Travessa', max_length=255, null=True, verbose_name='Logradouro')),
                ('bairro', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('numero', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=255, null=True)),
                ('cep', models.CharField(blank=True, default='', max_length=9, null=True, validators=[django.core.validators.RegexValidator('^\\d{5}-\\d{3}$', 'CEP deve estar no formato 00000-000.')], verbose_name='CEP')),
                ('municipio', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('uf', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins'), ('Não declarado', 'Não declarado')], default='Não declarado', max_length=50, null=True, verbose_name='Estado')),
                ('data_abertura', models.DateField(blank=True, null=True, verbose_name='Data de Abertura')),
                ('data_encerramento', models.DateField(blank=True, null=True, verbose_name='Data de Encerramento')),
                ('associacao', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='reparticoes', to='app_associacao.associacaomodel', verbose_name='Associação')),
                ('delegado', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delegado_associacao', to='app_associacao.integrantesmodel', verbose_name='Delegado')),
                ('municipio_sede', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sedes', to='app_associacao.municipiosmodel')),
                ('municipios_circunscricao', models.ManyToManyField(blank=True, default='', max_length=100, to='app_associacao.municipiosmodel')),
            ],
        ),
        migrations.AddField(
            model_name='integrantesmodel',
            name='reparticao',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='integrantes', to='app_associacao.reparticoesmodel', verbose_name='Repartição'),
        ),
    ]
